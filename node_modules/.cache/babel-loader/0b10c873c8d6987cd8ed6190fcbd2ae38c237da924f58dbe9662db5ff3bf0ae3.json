{"ast":null,"code":"var _jsxFileName = \"/home/diane/Desktop/blog_frontend/src/pages/post/Comment.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../auth/Authenticator\";\nimport { getUserById } from \"../auth/userHelper\";\nimport './Comment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comment = props => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [commentChange, setCommentChange] = useState(false);\n  const {\n    userId\n  } = useContext(AuthContext);\n  const data = {\n    id: props.postId\n  };\n  useEffect(() => {\n    fetch(\"/fetchCommentsByPostId\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(commentList => {\n      const getUserPromises = commentList.map(comment => getUserById(comment.userId).then(userObj => comment.userName = userObj.name));\n\n      // Wait for all promises to be resolved before updating the state\n      Promise.all(getUserPromises).then(() => {\n        setComments(commentList);\n      });\n    });\n  }, [props.postId, commentChange]);\n  function handleCommentPost() {\n    const titleElem = document.getElementById(\"commentTitleText\");\n    const contentElem = document.getElementById(\"commentContentText\");\n    if (userId === '') {\n      alert(\"You need to login to comment!\");\n      window.location.href = \"/sign-in\";\n    } else {\n      const newComment = {\n        postId: props.postId,\n        userId: userId,\n        title: titleElem.value,\n        content: contentElem.value\n      };\n      fetch(\"/uploadComment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newComment)\n      }).then(response => response.text()).then(text => {\n        alert(\"Comment uploaded!\");\n        titleElem.value = '';\n        contentElem.value = '';\n        setCommentChange(!commentChange);\n      });\n    }\n  }\n  function handleDelete(commentId) {\n    const data = {\n      postId: props.postId,\n      commentId: commentId,\n      userId: userId\n    };\n    fetch(\"/deleteComment\", {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.text()).then(text => {\n      if (text === \"OK\") {\n        alert(\"Comment deleted.\");\n        setComments(prevComments => prevComments.filter(comment => comment.commentId !== commentId));\n        setCommentChange(!commentChange);\n      } else alert(text);\n    }).catch(error => alert(\"Something didn't go right.\"));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"commentDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"commentPostDiv\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"commentTitleText\",\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"nextLine\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"commentContentText\",\n          placeholder: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"commentPostButton\",\n          onClick: handleCommentPost,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"commentContentDiv\",\n      children: comments && comments.reverse().map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"commentTitle\",\n          children: comment.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commentContent\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightAlignedDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author\",\n            children: [\"By : \", comment.userName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightAlignedDiv\",\n          children: userId === comment.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteButton\",\n            onClick: () => handleDelete(comment.commentId),\n            children: \"Delete Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)]\n      }, comment.commentId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"FSBDP5Dunfthkp8npLTxEQZl26U=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","getUserById","jsxDEV","_jsxDEV","Comment","props","_s","comments","setComments","commentChange","setCommentChange","userId","data","id","postId","fetch","method","headers","body","JSON","stringify","then","response","json","commentList","getUserPromises","map","comment","userObj","userName","name","Promise","all","handleCommentPost","titleElem","document","getElementById","contentElem","alert","window","location","href","newComment","title","value","content","text","handleDelete","commentId","prevComments","filter","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","reverse","className","_c","$RefreshReg$"],"sources":["/home/diane/Desktop/blog_frontend/src/pages/post/Comment.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\nimport {AuthContext} from \"../auth/Authenticator\";\nimport {getUserById} from \"../auth/userHelper\";\nimport './Comment.css'\nexport const Comment = (props) => {\n    const [comments, setComments] = useState([]);\n    const [commentChange, setCommentChange] = useState(false);\n    const {userId} = useContext(AuthContext);\n\n    const data = {\n        id : props.postId\n    }\n\n    useEffect( () => {\n\n        fetch(\"/fetchCommentsByPostId\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\",\n            },\n            body : JSON.stringify(data)\n        })\n            .then((response) => response.json())\n            .then((commentList) => {\n                const getUserPromises = commentList.map((comment) =>\n                    getUserById(comment.userId).then((userObj) => (comment.userName = userObj.name))\n                );\n\n                // Wait for all promises to be resolved before updating the state\n                Promise.all(getUserPromises).then(() => {\n                    setComments(commentList);\n                });\n            });\n    }, [props.postId, commentChange])\n\n\n    function handleCommentPost() {\n        const titleElem = document.getElementById(\"commentTitleText\");\n        const contentElem = document.getElementById(\"commentContentText\");\n\n        if (userId === ''){\n            alert(\"You need to login to comment!\");\n            window.location.href = \"/sign-in\";\n        }\n        else{\n            const newComment = {\n                postId: props.postId,\n                userId: userId,\n                title: titleElem.value,\n                content: contentElem.value\n            }\n\n            fetch(\"/uploadComment\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\" : \"application/json\",\n                },\n                body : JSON.stringify(newComment)\n            })\n                .then((response) => response.text())\n                .then((text) => {\n                    alert(\"Comment uploaded!\");\n                    titleElem.value = '';\n                    contentElem.value = '';\n                    setCommentChange(!commentChange);\n                });\n        }\n\n    }\n\n    function handleDelete(commentId){\n        const data = {\n            postId: props.postId,\n            commentId: commentId,\n            userId: userId\n        };\n        fetch(\"/deleteComment\", {\n            method: \"DELETE\",\n            headers: {\n                \"Content-Type\" : \"application/json\"\n            },\n            body: JSON.stringify(data)\n        })\n            .then((response) => response.text())\n            .then((text) => {\n                if (text === \"OK\"){\n                    alert(\"Comment deleted.\");\n                    setComments((prevComments) => prevComments.filter((comment) => comment.commentId !== commentId));\n                    setCommentChange(!commentChange);\n                }\n                else alert(text);\n            })\n            .catch((error) => alert(\"Something didn't go right.\"))\n    }\n\n    return(\n        <div id=\"commentDiv\">\n            <h2>Comments</h2>\n            <div id=\"commentPostDiv\">\n                <textarea id = \"commentTitleText\" placeholder=\"Title\"></textarea><br/>\n                <div id=\"nextLine\">\n                    <textarea id = \"commentContentText\" placeholder=\"Comment\"></textarea>\n                    <button id = \"commentPostButton\" onClick={handleCommentPost}>Submit</button>\n                </div>\n\n            </div>\n\n            <div id=\"commentContentDiv\">\n                {comments && comments.reverse().map((comment) => (\n                    <div className=\"commentDiv\" key={comment.commentId}>\n                        <h3 className=\"commentTitle\">{comment.title}</h3>\n                        <p className=\"commentContent\">{comment.content}</p>\n                        <div className=\"rightAlignedDiv\">\n                            <p className=\"author\">By : {comment.userName}</p>\n                        </div>\n\n                        <div className=\"rightAlignedDiv\">\n                            { userId === comment.userId && <button className=\"deleteButton\" onClick={() => handleDelete(comment.commentId)}>Delete Comment</button>}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}