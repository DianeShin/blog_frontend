{"ast":null,"code":"var _jsxFileName = \"/home/diane/Desktop/blog_frontend/src/pages/post/Comment.js\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AuthContext } from \"../auth/Authenticator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comment = props => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const {\n    userId\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const data = {\n      id: props.postId\n    };\n    fetch(\"/fetchCommentsByPostId\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(commentList => {\n      setComments(commentList);\n    });\n  });\n  function handleCommentPost() {\n    const titleElem = document.getElementById(\"commentTitleText\");\n    const contentElem = document.getElementById(\"commentContentText\");\n    if (userId === '') {\n      alert(\"You need to login to comment!\");\n      window.location.href = \"/sign-in\";\n    } else {\n      const newComment = {\n        postId: props.postId,\n        userId: userId,\n        title: titleElem.value,\n        content: contentElem.value\n      };\n      fetch(\"/uploadComment\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newComment)\n      }).then(response => response.text()).then(text => {\n        alert(\"Comment uploaded!\");\n        titleElem.value = '';\n        contentElem.value = '';\n      });\n    }\n  }\n  function handleDelete() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"commentTitleText\",\n      placeholder: \"Title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"commentContentText\",\n      placeholder: \"Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCommentPost,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"commentsDiv\",\n      children: comments && comments.reverse().map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentDiv\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"commentTitle\",\n          children: comment.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postContent\",\n          children: comment.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightAlignedDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"author\",\n            children: [\"By : \", comment.userId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightAlignedDiv\",\n          children: userId === comment.userId && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"deleteButton\",\n            onClick: () => handleDelete(comment.commentId),\n            children: \"Delete Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, comment.commentId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Comment, \"IIFaj5GXVtS5GAQFWDMLvtJefvI=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["useContext","useEffect","useState","AuthContext","jsxDEV","_jsxDEV","Comment","props","_s","comments","setComments","userId","data","id","postId","fetch","method","headers","body","JSON","stringify","then","response","json","commentList","handleCommentPost","titleElem","document","getElementById","contentElem","alert","window","location","href","newComment","title","value","content","text","handleDelete","children","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reverse","map","comment","className","commentId","_c","$RefreshReg$"],"sources":["/home/diane/Desktop/blog_frontend/src/pages/post/Comment.js"],"sourcesContent":["import {useContext, useEffect, useState} from \"react\";\nimport {AuthContext} from \"../auth/Authenticator\";\n\nexport const Comment = (props) => {\n    const [comments, setComments] = useState([]);\n    const {userId} = useContext(AuthContext);\n\n    useEffect( () => {\n        const data = {\n            id : props.postId\n        }\n        fetch(\"/fetchCommentsByPostId\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\" : \"application/json\",\n            },\n            body : JSON.stringify(data)\n        })\n            .then((response) => response.json())\n            .then((commentList) => {\n                setComments(commentList);\n            });\n    })\n\n    function handleCommentPost() {\n        const titleElem = document.getElementById(\"commentTitleText\");\n        const contentElem = document.getElementById(\"commentContentText\");\n\n        if (userId === ''){\n            alert(\"You need to login to comment!\");\n            window.location.href = \"/sign-in\";\n        }\n        else{\n            const newComment = {\n                postId: props.postId,\n                userId: userId,\n                title: titleElem.value,\n                content: contentElem.value\n            }\n\n            fetch(\"/uploadComment\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\" : \"application/json\",\n                },\n                body : JSON.stringify(newComment)\n            })\n                .then((response) => response.text())\n                .then((text) => {\n                    alert(\"Comment uploaded!\");\n                    titleElem.value = '';\n                    contentElem.value = '';\n                });\n        }\n\n    }\n\n    function handleDelete() {\n\n    }\n    return(\n        <div>\n            <textarea id = \"commentTitleText\" placeholder=\"Title\"></textarea>\n            <textarea id = \"commentContentText\" placeholder=\"Comment\"></textarea>\n            <button onClick={handleCommentPost}>Submit</button>\n            <div id=\"commentsDiv\">\n                {comments && comments.reverse().map((comment) => (\n                    <div className=\"commentDiv\" key={comment.commentId}>\n                        <h3 className=\"commentTitle\">{comment.title}</h3>\n                        <p className=\"postContent\">{comment.content}</p>\n                        <div className=\"rightAlignedDiv\">\n                            <p className=\"author\">By : {comment.userId}</p>\n                        </div>\n\n                        <div className=\"rightAlignedDiv\">\n                            { userId === comment.userId && <button className=\"deleteButton\" onClick={() => handleDelete(comment.commentId)}>Delete Comment</button>}\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}